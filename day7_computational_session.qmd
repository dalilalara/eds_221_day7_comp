---
title: "Joins, strings and dates"
format: html
editor: visual
---

```{r}
library(datapasta)
library(dplyr)
library(palmerpenguins)
```

# Joins

```{r}
animals <- tibble::tribble(
             ~location,   ~species,  ~maturity,
              "lagoon",   "bobcat",    "adult",
               "bluff",   "coyote", "juvenile",
               "creek",      "fox",    "adult",
                "oaks", "squirrel", "juvenile",
               "bluff",   "bobcat",    "adult"
             )


sites <- tibble::tribble(
           ~location,      ~full_site_name, ~jurisdiction,
             "beach",       "Goleta Beach",     "SB City",
            "lagoon",        "UCSB Lagoon",        "UCSB",
             "bluff",       "Ellwood Mesa",     "SB City",
              "oaks", "Fremont Campground",        "USFS"
           )

```

## Full Join

```{r}
#nothing gets ommited from data frame when combining data frames
full_join_example <- full_join(animals, sites )
```

## Left Join

```{r}
#takes x data and joins to x that has key value
left_join_example <- left_join(animals, sites)
```

## Inner Join

```{r}
inter_join_example <- inner_join(animals, sites, by = "location")

sites_2 <- sites |>
  rename(loc = location)
  
  
```

Example of joining when key variables have non mathcing names

```{r}
nonmatching <- full_join(animals, sites, by = c("location" = "loc"))
```

# Filter Join

## Semi Join

```{r}
semi_join_example <- semi_join(animals, sites, by = "location" )
```

## Anti Join

Where only observation don't have a match are returned

```{r}
anit_join_example <- anti_join(animals, sites, by = "location")
```

## Data Wrangling Refersher

```{r}
p_df <- penguins |>
  #filter(keeps rows)
  filter(island %in% c("Biscoe", "Dream Island")) |>
  #keep or exclude columns
  select(-sex, -year) |>
  #add column
  mutate(body_mass_kg = body_mass_g / 1000) |>
  #rename new name = old name
  rename(location = island)
```





